load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_test")
load("@rules_java//java:defs.bzl", "java_binary", "java_library")
load("//shared/bazel/rules:cc_rules.bzl", "wpilib_shared_and_static_library")
load("//shared/bazel/rules:packaging.bzl", "zip_java_srcs")
load("//shared/bazel/rules/publishing:publishing.bzl", "bundle_library_artifacts")

wpilib_shared_and_static_library(
    name = "cameraserver",
    srcs = glob(["src/main/native/cpp/**"]),
    hdrs = glob(["src/main/native/include/**/*"]),
    includes = [
        "cpp",
        "src/main/native/include",
    ],
    static_deps = [
        "//cscore:static/cscore",
        "//ntcore:static/ntcore",
    ],
    strip_include_prefix = "src/main/native/include",
    visibility = ["//visibility:public"],
    deps = [
        "//cscore",
        "//ntcore",
    ],
)

java_library(
    name = "cameraserver-java",
    srcs = glob(["src/main/java/**/*.java"]),
    visibility = ["//visibility:public"],
    deps = [
        "//cscore:cscore-java",
        "//hal:hal-java",
        "//ntcore:ntcore-java",
        "//wpimath:wpimath-java",
        "//wpinet:wpinet-java",
        "//wpiutil:wpiutil-java",
        "@bzlmodrio-opencv//libraries/java/opencv",
    ],
)

zip_java_srcs(name = "cameraserver")

cc_test(
    name = "cameraserver-cpp-test",
    size = "small",
    srcs = glob(["src/test/native/**"]),
    deps = [
        ":cameraserver",
        "//thirdparty/googletest",
    ],
)

cc_binary(
    name = "DevMain-Cpp",
    srcs = ["src/dev/native/cpp/main.cpp"],
    deps = [
        ":cameraserver",
    ],
)

java_binary(
    name = "DevMain-Java",
    srcs = ["src/dev/java/edu/wpi/first/cameraserver/DevMain.java"],
    main_class = "edu.wpi.first.cameraserver.DevMain",
    deps = [
    ],
)

bundle_library_artifacts(
    name = "publishing_bundle",
    cc_hdr_pkg = ":cameraserver-hdrs-zip",
    cc_shared_library_pkg = ":shared/cameraserver-shared-zip",
    cc_src_pkg = ":cameraserver-srcs-zip",
    cc_static_library_pkg = ":static/cameraserver-static-zip",
    group_id = "edu.wpi.first.cameraserver",
    java_pkg = "libcameraserver-java-sources",
    library_base_name = "cameraserver",
)
