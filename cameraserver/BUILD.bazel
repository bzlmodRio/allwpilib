load("//shared/bazel/rules:cc_rules.bzl", "wpilib_cc_binary", "wpilib_cc_static_and_shared_library", "wpilib_cc_test")
load("//shared/bazel/rules:java_rules.bzl", "wpilib_java_binary", "wpilib_java_library")
load("//shared/bazel/rules:publishing.bzl", "assemble_cpp_library", "assemble_java_library", "bundle_artifacts")

wpilib_cc_static_and_shared_library(
    name = "cameraserver",
    srcs = glob(["src/main/native/cpp/**"]),
    hdrs = glob(["src/main/native/include/**/*"]),
    includes = [
        "cpp",
        "src/main/native/include",
    ],
    strip_include_prefix = "src/main/native/include",
    visibility = ["//visibility:public"],
    wpi_maybe_shared_deps = [
        "//cscore:cscore",
        "//ntcore:ntcore",
    ],
)

wpilib_java_library(
    name = "cameraserver-java",
    srcs = glob(["src/main/java/**/*.java"]),
    visibility = ["//visibility:public"],
    deps = [
        "//cscore:cscore-java",
        "//hal:hal-java",
        "//ntcore:ntcore-java",
        "//wpimath:wpimath-java",
        "//wpinet:wpinet-java",
        "//wpiutil:wpiutil-java",
        "@bzlmodrio-opencv//libraries/java/opencv",
    ],
)

wpilib_cc_test(
    name = "cameraserver-cpp-test",
    size = "small",
    srcs = glob([
        "src/test/native/**/*.cpp",
        "src/test/native/**/*.h",
    ]),
    deps = [
        ":cameraserver.static",
        "//thirdparty/googletest:googletest.static",
    ],
)

wpilib_cc_binary(
    name = "DevMain-Cpp",
    srcs = ["src/dev/native/cpp/main.cpp"],
    deps = [
    ],
)

wpilib_java_binary(
    name = "DevMain-Java",
    srcs = ["src/dev/java/edu/wpi/first/cameraserver/DevMain.java"],
    main_class = "edu.wpi.first.cameraserver.DevMain",
    deps = [
    ],
)

assemble_cpp_library(
    base_name = "cameraserver",
    hdr_directories = ["src/main/native/include"],
    shared_library_pkg_files = "cameraserver.shared_pkg_files",
    src_directories = ["src/main/native/cpp"],
    static_library_pkg_files = "cameraserver.static_pkg_files",
)

assemble_java_library(
    base_name = "cameraserver",
    src_directories = ["src/main/java"],
)

bundle_artifacts(
    name = "cameraserver-publishing",
    artifacts = [
        ("edu.wpi.first.cameraserver:cameraserver-cpp:-headers", "cameraserver.hdrs_pkg"),
        ("edu.wpi.first.cameraserver:cameraserver-cpp:-sources", "cameraserver.srcs_pkg"),
        ("edu.wpi.first.cameraserver:cameraserver-cpp:-{platform}", "cameraserver.shared_pkg"),
        ("edu.wpi.first.cameraserver:cameraserver-cpp:-{platform}static", "cameraserver.static_pkg"),
        ("edu.wpi.first.cameraserver:cameraserver-java:-sources", "cameraserver.java_srcs_pkg"),
    ],
)
