# PROJECTS = [
#     "AddressableLED",
#     "AprilTagsVision",
#     "ArcadeDrive",
#     "ArcadeDriveXboxController",
#     "ArmBot",
#     "ArmBotOffboard",
#     "ArmSimulation",
#     "CANPDP",
#     "DifferentialDriveBot",
#     "DigitalCommunication",
#     "DriveDistanceOffboard",
#     "DutyCycleEncoder",
#     "DutyCycleInput",
#     "ElevatorProfiledPID",
#     "ElevatorSimulation",
#     "ElevatorTrapezoidProfile",
#     "Encoder",
#     "FlywheelBangBangController",
#     "FrisbeeBot",
#     "GameData",
#     "GettingStarted",
#     "Gyro",
#     "GyroDriveCommands",
#     "GyroMecanum",
#     "HatchbotInlined",
#     "HatchbotTraditional",
#     "HidRumble",
#     "HttpCamera",
#     "I2CCommunication",
#     "IntermediateVision",
#     "MagicbotSimple",
#     "MecanumBot",
#     "MecanumDrive",
#     "MecanumDriveXbox",
#     "Mechanism2d",
#     "MotorControl",
#     "Physics/src",
#     "Physics4Wheel/src",
#     "PhysicsMecanum/src",
#     "PhysicsSPI/src",
#     "PotentiometerPID",
#     "QuickVision",
#     "RamseteController",
#     "Relay",
#     "RomiReference",
#     "SchedulerEventLogging",
#     "SelectCommand",
#     "ShuffleBoard",
#     "Solenoid",
#     "StatefulAutonomous",
#     "StateSpaceFlywheel",
#     "StateSpaceFlywheelSysId",
#     "SwerveBot",
#     "SysId",
#     "TankDrive",
#     "TankDriveXboxController",
#     "Timed/src",
#     "Ultrasonic",
#     "UltrasonicPID",
# ]

# load("@rules_python//python/entry_points:py_console_script_binary.bzl", "py_console_script_binary")
# load("@allwpilib_pip_deps//:requirements.bzl", "requirement")

# py_console_script_binary(
#     name = "robotpy",
#     pkg = "@allwpilib_pip_deps//robotpy_cli",
#     # shebang = "#!/usr/bin/env python3",

#     deps = [
#         # requirement("wpilib"),
#         requirement("pyfrc"),
#         requirement("pytest"),
#         # "//wpilibc:robotpy-wpilib",
#         # "//wpilibc:robotpy-native-wpilib",
#     ]
# )

# [py_binary(
#     name = project + "-robot",
#     srcs = glob([project + "/**/*.py"]),
#     main = project + "/robot.py",
#     legacy_create_init = False,
#     deps = [
#         requirement("wpilib"),
#         # "//wpilibc:robotpy-wpilib",
#         # "//wpilibc:robotpy-native-wpilib",
#     ]
# ) for project in PROJECTS]
