load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")
load("//shared/bazel/rules/gen:gen-resources.bzl", "generate_resources")

generate_resources(
    name = "generate-resources",
    namespace = "wpical",
    prefix = "WPIcal",
    resource_files = glob(["src/main/native/resources/*"]),
)

cc_library(
    name = "libdogleg_hdr",
    hdrs = glob(["src/main/native/thirdparty/libdogleg/include/*"]),
    strip_include_prefix = "src/main/native/thirdparty/libdogleg/include",
)

filegroup(
    name = "libdogleg_src",
    srcs = glob(["src/main/native/thirdparty/libdogleg/src/*"]),
)

cc_library(
    name = "mrcal_hdr",
    hdrs = glob(["src/main/native/thirdparty/mrcal/include/**"]),
    strip_include_prefix = "src/main/native/thirdparty/mrcal/include",
)

cc_library(
    name = "mrcal_java_hdr",
    hdrs = glob(["src/main/native/thirdparty/mrcal_java/include/**"]),
    strip_include_prefix = "src/main/native/thirdparty/mrcal_java/include",
)

filegroup(
    name = "mrcal_java_src",
    srcs = glob(["src/main/native/thirdparty/mrcal_java/src/*"]),
)

cc_library(
    name = "mrcal_gen_hdr",
    hdrs = glob(["src/main/native/thirdparty/mrcal/generated/*"]),
    strip_include_prefix = "src/main/native/thirdparty/mrcal/generated",
)

filegroup(
    name = "mrcal_src",
    srcs = glob(["src/main/native/thirdparty/mrcal/src/*"]),
)

cc_library(
    name = "wpical-headers",
    hdrs = glob(["src/main/native/include/**/*"]),
    includes = ["src/main/native/include"],
    strip_include_prefix = "src/main/native/include",
)

copts = select({
    "@bazel_tools//src/conditions:darwin": [
        "-Wno-missing-field-initializers",
        "-Wno-unused-variable",
        "-Wno-unused-function",
        "-Wno-sign-compare",
        "-fpermissive",
        "-Wno-missing-braces",
        "-Wno-null-conversion",
        "-Wno-unused-but-set-variable",
    ],
    "@bazel_tools//src/conditions:windows": [
        "/wd4068",
        "/wd4101",
        "/wd4200",
        "/wd4576",
        "/wd4715",
    ],
    "@rules_bzlmodrio_toolchains//constraints/combined:is_unix": [
        "-Wno-format-nonliteral",
        "-Wno-unused-variable",
        "-Wno-unused-function",
        "-Wno-sign-compare",
        "-Wno-missing-field-initializers",
        "-Wno-deprecated-declarations",
        # "-Wno-deprecated-enum-enum-conversion"
    ],
    "//conditions:default": [],
})

cc_binary(
    name = "wpical",
    srcs = glob(["src/main/native/cpp/**"]) + [
        ":generate-resources",
        ":libdogleg_src",
        ":mrcal_java_src",
        ":mrcal_src",
    ],
    copts = copts,
    defines = ["GLOG_USE_GLOG_EXPORT"],
    linkopts = select({
        "@bazel_tools//src/conditions:darwin": [],
        "@bazel_tools//src/conditions:windows": [],
        "@rules_bzlmodrio_toolchains//constraints/combined:is_linux": ["-lgfortran"],
    }),
    visibility = ["//visibility:public"],
    deps = [
        "libdogleg_hdr",
        "mrcal_gen_hdr",
        "mrcal_hdr",
        "mrcal_java_hdr",
        "wpical-headers",
        "//apriltag:apriltag.static",
        "//cscore:cscore.static",
        "//wpigui",
        "//wpiutil:wpiutil.static",
        "@bzlmodrio-ceres//libraries/cpp/ceres-cpp",
    ],
)

# cc_test(
#     name = "wpical-test",
#     srcs = glob(["src/test/native/cpp/*"]) + glob(["src/main/native/cpp/**"]) + [
#         ":mrcal_src",
#         ":libdogleg_src",
#         ":mrcal_java_src",
#         ":generate-resources",
#     ],
#     deps = [
#         "//thirdparty/googletest:googletest.static",
#         "wpical-headers",
#         "libdogleg_hdr",
#         "mrcal_hdr",
#         "mrcal_java_hdr",
#         "mrcal_gen_hdr",
#         "//wpiutil:wpiutil.static",
#         "//apriltag:apriltag.static",
#         "@bzlmodrio-ceres//libraries/cpp/ceres-cpp",
#         "//wpigui",
#         "//cscore:cscore.static"
#     ],
#     defines = ["GLOG_USE_GLOG_EXPORT", 'PROJECT_ROOT_PATH=\\"/home/pjreiniger/git/allwpilib/wpical/src/main/native/resources\\"', "RUNNING_WPICAL_TESTS"],
#     copts = copts,
#     linkopts = select({
#         "@bazel_tools//src/conditions:darwin": [],
#         "@bazel_tools//src/conditions:windows": [],
#         "@rules_bzlmodrio_toolchains//constraints/combined:is_linux": ["-lgfortran"],
#     }),
# )
