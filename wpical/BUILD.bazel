load("//shared/bazel/rules/gen:gen-resources.bzl", "generate_resources")


generate_resources(
    name = "generate-resources",
    namespace = "wpical",
    prefix = "WPIcal",
    resource_files = glob(["src/main/native/resources/*"]),
)


cc_library(
    name = "libdogleg_hdr",
    hdrs = glob(["src/main/native/thirdparty/libdogleg/include/*"]),
    strip_include_prefix = "src/main/native/thirdparty/libdogleg/include",
)

filegroup(
    name = "libdogleg_src",
    srcs = glob(["src/main/native/thirdparty/libdogleg/src/*"]),
)

cc_library(
    name = "mrcal_hdr",
    hdrs = glob(["src/main/native/thirdparty/mrcal/include/**"]),
    strip_include_prefix = "src/main/native/thirdparty/mrcal/include",
)

cc_library(
    name = "mrcal_java_hdr",
    hdrs = glob(["src/main/native/thirdparty/mrcal_java/include/**"]),
    strip_include_prefix = "src/main/native/thirdparty/mrcal_java/include",
)

filegroup(
    name = "mrcal_java_src",
    srcs = glob(["src/main/native/thirdparty/mrcal_java/src/*"]),
)

cc_library(
    name = "mrcal_gen_hdr",
    hdrs = glob(["src/main/native/thirdparty/mrcal/generated/*"]),
    strip_include_prefix = "src/main/native/thirdparty/mrcal/generated",
)


filegroup(
    name = "mrcal_src",
    srcs = glob(["src/main/native/thirdparty/mrcal/src/*"]),
)


cc_library(
    name = "wpical-headers",
    hdrs = glob(["src/main/native/include/**/*"]),
    includes = ["src/main/native/include"],
    strip_include_prefix = "src/main/native/include",
)

cc_binary(
    name = "wpical",
    srcs = glob(["src/main/native/cpp/**"]) + [
        ":mrcal_src",
        ":libdogleg_src",
        ":mrcal_java_src",
        ":generate-resources",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "wpical-headers",
        "libdogleg_hdr",
        "mrcal_hdr",
        "mrcal_java_hdr",
        "mrcal_gen_hdr",
        "//wpiutil:wpiutil.static",
        "//apriltag:apriltag.static",
        "@bzlmodrio-ceres//libraries/cpp/ceres-cpp",
        "//wpigui",
        "//cscore:cscore.static"
    ],
    copts = select({
        "@rules_bzlmodrio_toolchains//constraints/combined:is_unix": [
            "-Wno-format-nonliteral",
            "-Wno-unused-variable",
            "-Wno-unused-function",
            "-Wno-sign-compare",
            "-Wno-missing-field-initializers",
            "-Wno-deprecated-declarations",
            # "-Wno-deprecated-enum-enum-conversion"
        ],
    }),
    defines = ["GLOG_USE_GLOG_EXPORT"],
    linkopts = ["-lgfortran"]
)
