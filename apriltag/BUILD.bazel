load("@allwpilib_pip_deps//:requirements.bzl", "requirement")
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")
load("@rules_java//java:defs.bzl", "java_binary")
load("@rules_pkg//:mappings.bzl", "pkg_files")
load("@rules_python//python:defs.bzl", "py_binary")
load("//apriltag:robotpy_native_build_info.bzl", "define_native_wrapper")
load("//apriltag:robotpy_pybind_build_info.bzl", "apriltag_extension", "define_pybind_library")
load("//shared/bazel/rules:cc_rules.bzl", "wpilib_shared_and_static_library")
load("//shared/bazel/rules:java_rules.bzl", "wpilib_java_junit5_test")
load("//shared/bazel/rules:jni_rules.bzl", "wpilib_jni_cc_library", "wpilib_jni_java_library")
load("//shared/bazel/rules:packaging.bzl", "zip_java_srcs")
load("//shared/bazel/rules/gen:gen-resources.bzl", "generate_resources")
load("//shared/bazel/rules/publishing:publishing.bzl", "bundle_default_jni_library")
load("//shared/bazel/rules/robotpy:build_info_gen.bzl", "generate_robotpy_native_wrapper_build_info", "generate_robotpy_pybind_build_info")
load("//shared/bazel/rules/robotpy:pytest_util.bzl", "robotpy_py_test")

pkg_files(
    name = "thirdparty-apriltag-src-pkg",
    srcs = glob(["src/main/native/thirdparty/apriltag/include/**"]),
    strip_prefix = "src/main/native/thirdparty/apriltag/include",
)

cc_library(
    name = "thirdparty-apriltag",
    srcs = glob(["src/main/native/thirdparty/apriltag/src/**"]),
    hdrs = glob(["src/main/native/thirdparty/apriltag/include/**"]),
    copts = select({
        "@bazel_tools//src/conditions:darwin": [
            "-Wno-format-nonliteral",
            "-Wno-gnu-zero-variadic-macro-arguments",
            "-Wno-uninitialized",
            "-Wno-sign-compare",
            "-Wno-type-limits",
        ],
        "@bazel_tools//src/conditions:windows": [
            "/wd4005",
            "/wd4018",
            "/wd4244",
            "/wd4267",
            "/wd4996",
        ],
        "@rules_bzlmodrio_toolchains//constraints/combined:is_linux": [
            "-Wno-format-nonliteral",
            "-Wno-maybe-uninitialized",
            "-Wno-sign-compare",
            "-Wno-type-limits",
        ],
    }),
    includes = ["src/main/native/thirdparty/apriltag/include/common"],
    strip_include_prefix = "src/main/native/thirdparty/apriltag/include",
)

generate_resources(
    name = "generate-resources",
    namespace = "frc",
    prefix = "APRILTAG",
    resource_files = glob(["src/main/native/resources/**"]),
)

wpilib_shared_and_static_library(
    name = "apriltag",
    srcs = [":generate-resources"] + glob(
        ["src/main/native/cpp/**"],
        exclude = ["src/main/native/cpp/jni/**"],
    ),
    hdrs = glob(["src/main/native/include/**/*"]),
    dynamic_deps = [
        "//wpimath:shared/wpimath",
        "//wpiutil:shared/wpiutil",
    ],
    extra_hdr_pkg_files = [":thirdparty-apriltag-src-pkg"],
    extra_src_pkg_files = [":apriltag-java-jni-hdrs-pkg"],
    local_defines = ["WPILIB_EXPORTS"],
    static_deps = [
        "//wpimath:static/wpimath",
        "//wpiutil:static/wpiutil",
    ],
    strip_include_prefix = "src/main/native/include",
    visibility = ["//visibility:public"],
    deps = [
        ":thirdparty-apriltag",
        "//wpimath",
        "//wpiutil",
    ],
)

wpilib_jni_cc_library(
    name = "apriltagjni",
    srcs = glob(["src/main/native/cpp/jni/**"]),
    dynamic_deps = [
        ":shared/apriltag",
        "//wpimath:shared/wpimath",
        "//wpiutil:shared/wpiutil",
    ],
    java_dep = ":apriltag-java",
    visibility = ["//visibility:public"],
    deps = [
        ":apriltag",
    ],
)

wpilib_jni_java_library(
    name = "apriltag-java",
    srcs = glob(["src/main/java/**/*.java"]),
    native_libs = [":apriltagjni"],
    resource_strip_prefix = "apriltag/src/main/native/resources",
    resources = glob(["src/main/native/resources/**"]),
    visibility = ["//visibility:public"],
    deps = [
        "//wpimath:wpimath-java",
        "//wpiutil:wpiutil-java",
        "@bzlmodrio-opencv//libraries/java/opencv",
        "@maven//:com_fasterxml_jackson_core_jackson_annotations",
        "@maven//:com_fasterxml_jackson_core_jackson_core",
        "@maven//:com_fasterxml_jackson_core_jackson_databind",
    ],
)

pkg_files(
    name = "resources",
    srcs = glob(["src/main/native/resources/**"]),
    strip_prefix = "src/main/native/resources/",
)

zip_java_srcs(
    name = "apriltag",
    extra_pkgs = [":resources"],
)

cc_test(
    name = "apriltag-cpp-test",
    size = "small",
    srcs = glob(["src/test/native/cpp/**"]),
    tags = [
        "no-asan",
    ],
    deps = [
        ":apriltag",
        "//thirdparty/googletest",
    ],
)

wpilib_java_junit5_test(
    name = "apriltag-java-test",
    srcs = glob(["src/test/java/**/*.java"]),
    resource_strip_prefix = "apriltag/src/test/resources",
    resources = glob(["src/test/resources/**"]),
    deps = [
        ":apriltag-java",
        "//wpimath:wpimath-java",
        "//wpiutil:wpiutil-java",
        "@bzlmodrio-opencv//libraries/java/opencv",
        "@maven//:com_fasterxml_jackson_core_jackson_databind",
    ],
)

cc_binary(
    name = "DevMain-Cpp",
    srcs = ["src/dev/native/cpp/main.cpp"],
    deps = [
        ":apriltag",
    ],
)

java_binary(
    name = "DevMain-Java",
    srcs = ["src/dev/java/edu/wpi/first/apriltag/DevMain.java"],
    main_class = "edu.wpi.first.apriltag.DevMain",
    deps = [
        ":apriltag-java",
    ],
)

py_binary(
    name = "convert_apriltag_layouts",
    srcs = ["convert_apriltag_layouts.py"],
    target_compatible_with = select({
        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)

bundle_default_jni_library(
    name = "publishing_bundle",
    group_id = "edu.wpi.first.apriltag",
    library_base_name = "apriltag",
)

generate_robotpy_native_wrapper_build_info(
    name = "robotpy-native-apriltag-generator",
    pyproject_toml = "src/main/python/native-pyproject.toml",
    third_party_dirs = ["apriltag"],
)

define_native_wrapper(
    name = "robotpy-native-apriltag",
    pyproject_toml = "src/main/python/native-pyproject.toml",
)

generate_robotpy_pybind_build_info(
    name = "robotpy-apriltag-generator",
    additional_srcs = [":robotpy-native-apriltag.copy_headers"],
    package_root_file = "src/main/python/robotpy_apriltag/__init__.py",
    pkgcfgs = [
        "//wpiutil:src/main/python/wpiutil/wpiutil.pc",
        "//wpiutil:src/main/python/wpiutil/wpiutil-casters.pc",
        "//wpiutil:src/main/python/wpiutil/wpiutil-casters.pybind11.json",
        "//wpimath:src/main/python/wpimath/wpimath.pc",
        "//wpimath:src/main/python/wpimath/wpimath-casters.pc",
        "//wpimath:src/main/python/wpimath/wpimath-casters.pybind11.json",
        "//wpimath:native/wpimath/robotpy-native-wpimath.pc",
        "//apriltag:native/apriltag/robotpy-native-apriltag.pc",
        "//wpiutil:native/wpiutil/robotpy-native-wpiutil.pc",
    ],
    yaml_files = glob(["src/main/python/semiwrap/*.yml"]),
)

apriltag_extension(
    srcs = ["src/main/python/robotpy_apriltag/src/main.cpp"],
    includes = [
        "src/main/python/datalog/",
    ],
)

define_pybind_library(name = "robotpy-apriltag")

robotpy_py_test(
    "python_tests",
    data = glob([
        "src/test/python/*.png",
        "src/test/python/*.jpg",
    ]),
    extra_sources = ["src/test/python/conftest.py"],
    tests = glob(
        ["src/test/python/**/*.py"],
        exclude = [
            "src/test/python/conftest.py",
            "src/test/python/run_tests.py",
        ],
    ),
    deps = [
        ":robotpy-apriltag",
        requirement("pytest"),
        requirement("opencv-python"),
    ],
)
