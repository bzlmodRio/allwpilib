module(
    name = "allwpilib",
    version = "2023.4.3",
    compatibility_level = 2023,
)

bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "aspect_bazel_lib", version = "2.7.2")
bazel_dep(name = "apple_support", version = "1.15.1", repo_name = "build_bazel_apple_support")
bazel_dep(name = "rules_cc", version = "0.0.15")
bazel_dep(name = "rules_java", version = "7.12.2")
bazel_dep(name = "rules_jvm_external", version = "6.3")
bazel_dep(name = "rules_python", version = "0.40.0")
bazel_dep(name = "bzlmodrio-libssh", version = "2024.0.105-1")
bazel_dep(name = "bzlmodrio-ni", version = "2025.2.0")
bazel_dep(name = "bzlmodrio-opencv", version = "2025.4.10.0-3")
bazel_dep(name = "rules_bzlmodrio_toolchains", version = "2025-1.bcr2")
bazel_dep(name = "rules_bazelrio", version = "0.0.13")
bazel_dep(name = "rules_bzlmodrio_jdk", version = "17.0.8.1-1")
bazel_dep(name = "protobuf", version = "29.0-rc2")

archive_override(
    module_name = "rules_bzlmodrio_jdk",
    integrity = "sha256-SrikyrF2v2lENdqn9aFC//d0TkIE620lR60yXTrWFTs=",
    strip_prefix = "rules_bzlmodrio_jdk-4ecd4cbc97dfbfe2ceefa627de1228e2f2ca5773",
    urls = ["https://github.com/wpilibsuite/rules_bzlmodRio_jdk/archive/4ecd4cbc97dfbfe2ceefa627de1228e2f2ca5773.tar.gz"],
)

archive_override(
    module_name = "bzlmodrio-libssh",
    integrity = "sha256-YIdCS3f37kU6QJBRDTBOCcjUclBBYys0+vPY92zVrrQ=",
    strip_prefix = "bzlmodRio-libssh-8bb529e686069e9b198c0f55302d150df66da5d3",
    urls = ["https://github.com/bzlmodrio/bzlmodRio-libssh/archive/8bb529e686069e9b198c0f55302d150df66da5d3.tar.gz"],
)

# git_override(
#     module_name = "rules_bzlmodrio_jdk",
#     commit = "32d4c03e8343a17dbc0b4bdf1a482e77a3d37058",
#     remote = "https://github.com/bzlmodRio/rules_bzlmodrio_jdk",
# )

# local_path_override(
#     module_name = "rules_bzlmodrio_jdk",
#     path = "/home/pjreiniger/git/bzlmodRio/monorepo/rules/rules_bzlmodrio_jdk",
# )

# local_path_override(
#     module_name = "rules_bzlmodrio_toolchains",
#     path = "C:/Users/PJ/git/bzlmodrio/monorepo/rules/rules_bzlmodrio_toolchains",
# )

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "org.ejml:ejml-simple:0.43.1",
        "com.fasterxml.jackson.core:jackson-annotations:2.15.2",
        "com.fasterxml.jackson.core:jackson-core:2.15.2",
        "com.fasterxml.jackson.core:jackson-databind:2.15.2",
        "org.junit.jupiter:junit-jupiter:5.10.1",
        "org.junit.platform:junit-platform-console:1.10.1",
        "org.junit.platform:junit-platform-launcher:1.10.1",
        "org.junit.platform:junit-platform-reporting:1.10.1",
        "com.google.code.gson:gson:2.10.1",
        "org.hamcrest:hamcrest-all:1.3",
        "com.googlecode.junit-toolbox:junit-toolbox:2.4",
        "org.apache.ant:ant:1.10.12",
        "org.apache.ant:ant-junit:1.10.12",
        "org.mockito:mockito-core:4.1.0",
        "us.hebi.quickbuf:quickbuf-runtime:1.3.3",
        "junit:junit:4.13.2",
        "com.google.auto.service:auto-service:1.1.1",
        "com.google.testing.compile:compile-testing:0.21.0",
    ],
    repositories = [
        "https://repo1.maven.org/maven2",
    ],
    # lock_file = "@//shared/bazel/deps:maven_install.json",
)
use_repo(
    maven,
    "maven",
)

setup_quickbuf_protoc = use_extension("//shared/bazel/deps:quickbuf_protoc.bzl", "setup_quickbuf_protoc")
use_repo(
    setup_quickbuf_protoc,
    "quickbuffer_protoc_linux",
    "quickbuffer_protoc_osx",
    "quickbuffer_protoc_windows",
)

python = use_extension(
    "@rules_python//python/extensions:python.bzl",
    "python",
    dev_dependency = True,
)
python.toolchain(
    ignore_root_user_error = True,
    is_default = True,
    python_version = "3.10",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "allwpilib_pip_deps",
    python_version = "3.10",
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "allwpilib_pip_deps")
