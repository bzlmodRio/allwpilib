module(
    name = "allwpilib",
    version = "2023.4.3",
    compatibility_level = 2023,
)

bazel_dep(name = "googletest", version = "1.14.0", repo_name = "gtest")
bazel_dep(name = "aspect_bazel_lib", version = "1.39.0")
bazel_dep(name = "rules_cc", version = "0.0.8")
bazel_dep(name = "rules_java", version = "6.4.0")
bazel_dep(name = "rules_jvm_external", version = "5.3")
bazel_dep(name = "rules_python", version = "0.21.0")
bazel_dep(name = "rules_proto", version = "5.3.0-21.7")
bazel_dep(name = "protobuf", version = "21.7", repo_name = "com_google_protobuf")
bazel_dep(name = "bzlmodrio-apriltaglib", version = "2024.3.3.0-1")
bazel_dep(name = "bzlmodrio-imgui", version = "2024.1.89.9-1")
bazel_dep(name = "bzlmodrio-libssh", version = "2024.0.105-1")
bazel_dep(name = "bzlmodrio-ni", version = "2024.1.1")
bazel_dep(name = "bzlmodrio-opencv", version = "2024.4.8.0-1")
bazel_dep(name = "rules_bzlmodrio_toolchains", version = "2024-1")
bazel_dep(name = "rules_bazelrio", version = "0.0.13")

git_override(
    module_name = "com_google_protobuf",
    commit = "v3.21.12",
    patches = [
        "//upstream_utils/protobuf_patches:0001-Fix-sign-compare-warnings.patch",
        "//upstream_utils/protobuf_patches:0002-Remove-redundant-move.patch",
        "//upstream_utils/protobuf_patches:0003-Fix-maybe-uninitialized-warnings.patch",
        "//upstream_utils/protobuf_patches:0004-Fix-coded_stream-WriteRaw.patch",
        "//upstream_utils/protobuf_patches:0005-Suppress-enum-enum-conversion-warning.patch",
        "//upstream_utils/protobuf_patches:0006-Fix-noreturn-function-returning.patch",
        "//upstream_utils/protobuf_patches:0007-Work-around-GCC-12-restrict-warning-compiler-bug.patch",
        "//upstream_utils/protobuf_patches:0008-Disable-MSVC-switch-warning.patch",
        "//upstream_utils/protobuf_patches:0009-Disable-unused-function-warning.patch",
        "//upstream_utils/protobuf_patches:0010-Disable-pedantic-warning.patch",
        "//upstream_utils/protobuf_patches:0011-Avoid-use-of-sprintf.patch",
    ],
    remote = "https://github.com/protocolbuffers/protobuf",
)

# local_path_override(
#     module_name = "rules_bzlmodrio_toolchains",
#     path = "C:/Users/PJ/git/bzlmodrio/monorepo/rules/rules_bzlmodrio_toolchains",
# )

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "org.ejml:ejml-simple:0.42",
        "com.fasterxml.jackson.core:jackson-annotations:2.15.2",
        "com.fasterxml.jackson.core:jackson-core:2.15.2",
        "com.fasterxml.jackson.core:jackson-databind:2.15.2",
        "org.junit.jupiter:junit-jupiter-api:5.10.0",
        "org.junit.jupiter:junit-jupiter-params:5.10.0",
        "org.junit.jupiter:junit-jupiter-engine:5.10.0",
        "org.junit.platform:junit-platform-commons:1.6.1",
        "org.junit.platform:junit-platform-console:1.6.1",
        "org.junit.platform:junit-platform-engine:1.6.1",
        "org.junit.platform:junit-platform-launcher:1.6.1",
        "org.junit.platform:junit-platform-suite-api:1.6.1",
        "com.google.code.gson:gson:2.10.1",
        "org.hamcrest:hamcrest-all:1.3",
        "com.googlecode.junit-toolbox:junit-toolbox:2.4",
        "org.apache.ant:ant:1.10.12",
        "org.apache.ant:ant-junit:1.10.12",
        "org.mockito:mockito-core:4.1.0",
        "us.hebi.quickbuf:quickbuf-runtime:1.3.2",
    ],
    repositories = [
        "https://repo1.maven.org/maven2",
    ],
)
use_repo(
    maven,
    "maven",
)

setup_quickbuf_protoc = use_extension("//shared/bazel/deps:quickbuf_protoc.bzl", "setup_quickbuf_protoc")
use_repo(
    setup_quickbuf_protoc,
    "quickbuffer_protoc_linux",
    "quickbuffer_protoc_osx",
    "quickbuffer_protoc_windows",
)

pip = use_extension("@rules_python//python:extensions.bzl", "pip")
pip.parse(
    name = "allwpilib_pip_deps",
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "allwpilib_pip_deps")

python = use_extension("@rules_python//python:extensions.bzl", "python")
python.toolchain(
    name = "python3_10",
    ignore_root_user_error = True,
    python_version = "3.10",
)
use_repo(python, "python3_10_toolchains")

register_toolchains(
    "@python3_10_toolchains//:all",
)
