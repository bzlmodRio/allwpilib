load("@rules_cc//cc:defs.bzl", "cc_binary")
load("@rules_pkg//:mappings.bzl", "pkg_files")
load("//shared/bazel/rules:cc_rules.bzl", "wpilib_cc_library", "wpilib_cc_static_library")
load("//shared/bazel/rules:publishing.bzl", "architectures_pkg_zip", "platform_prefix", "wpilib_maven_export")
load("//shared/bazel/rules/gen:gen-resources.bzl", "generate_resources")
load("//shared/bazel/rules/gen:gen-version-file.bzl", "generate_version_file")

wpilib_cc_library(
    name = "libglass",
    srcs = glob(["src/lib/native/cpp/**/*.cpp"]),
    hdrs = glob(["src/lib/native/include/**"]),
    hdrs_pkg_root = "src/lib/native/include",
    include_license_files = True,
    srcs_pkg_root = "src/lib/native/cpp",
    strip_include_prefix = "src/lib/native/include",
    tags = [
        "wpi-cpp-gui",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//fieldImages",
        "//wpigui",
        "//wpimath",
        "//wpiutil",
    ],
)

wpilib_cc_static_library(
    name = "static/glass",
    static_deps = [
        "//wpigui:static/wpigui",
        "//wpimath:static/wpimath",
        "//wpiutil:static/wpiutil",
        "//fieldImages:static/fieldImages",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":libglass",
    ],
)

wpilib_cc_library(
    name = "libglassnt",
    srcs = glob(["src/libnt/native/cpp/*.cpp"]),
    hdrs = glob(["src/libnt/native/include/**/*.h"]),
    hdrs_pkg_root = "src/libnt/native/include",
    include_license_files = True,
    srcs_pkg_root = "src/libnt/native/cpp",
    strip_include_prefix = "src/libnt/native/include",
    tags = [
        "wpi-cpp-gui",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":libglass",
        "//ntcore",
    ],
)

wpilib_cc_static_library(
    name = "static/glassnt",
    static_deps = [
        ":static/glass",
        "//ntcore:static/ntcore",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":libglassnt",
    ],
)

generate_version_file(
    name = "generate-version",
    output_file = "WPILibVersion.cpp",
    template = "src/app/generate/WPILibVersion.cpp.in",
)

generate_resources(
    name = "generate-resources",
    namespace = "glass",
    prefix = "GLASS",
    resource_files = glob(["src/app/native/resources/*"]),
)

cc_binary(
    name = "glassApp",
    srcs = [
        ":generate-resources",
        ":generate-version",
    ] + glob(["src/app/native/cpp/**"]),
    linkopts = select({
        "@bazel_tools//src/conditions:windows": ["-SUBSYSTEM:WINDOWS"],
        "//conditions:default": [],
    }),
    tags = [
        "wpi-cpp-gui",
    ],
    deps = [
        ":libglassnt",
    ],
)

pkg_files(
    name = "libglass-static-files",
    srcs = [
        ":static/glass",
    ],
    prefix = platform_prefix("static"),
    strip_prefix = "static",
)

architectures_pkg_zip(
    name = "libglass_static_zip",
    srcs = [
        ":libglass-static-files",
        "//:license_pkg_files",
    ],
)

wpilib_maven_export(
    name = "libglass-cpp_publish",
    classifier_artifacts = {
        "headers": ":libglass-hdrs-zip",
        "sources": ":libglass-srcs-zip",
    },
    linux_artifacts = {
        "linuxx86-64static": ":libglass_static_zip-opt-linux-x86-64",
        "linuxx86-64staticdebug": ":libglass_static_zip-dbg-linux-x86-64",
    },
    maven_coordinates = "{}:{}:$(WPILIB_VERSION)".format("edu.wpi.first.glass", "libglass"),
    osx_artifacts = {
        "osxuniversalstatic": ":libglass_static_zip-opt-osxuniversal",
        "osxuniversalstaticdebug": ":libglass_static_zip-dbg-osxuniversal",
    },
    visibility = ["//visibility:public"],
    windows_artifacts = {
        "windowsarm64static": ":libglass_static_zip-opt-windows-arm64",
        "windowsarm64staticdebug": ":libglass_static_zip-dbg-windows-arm64",
        "windowsx86-64static": ":libglass_static_zip-opt-windows-x86-64",
        "windowsx86-64staticdebug": ":libglass_static_zip-dbg-windows-x86-64",
    },
)

pkg_files(
    name = "libglassnt-static-files",
    srcs = [
        ":static/glassnt",
    ],
    prefix = platform_prefix("static"),
    strip_prefix = "static",
)

architectures_pkg_zip(
    name = "libglassnt_static_zip",
    srcs = [
        ":libglassnt-static-files",
        "//:license_pkg_files",
    ],
)

wpilib_maven_export(
    name = "libglassnt-cpp_publish",
    classifier_artifacts = {
        "headers": ":libglassnt-hdrs-zip",
        "sources": ":libglassnt-srcs-zip",
    },
    linux_artifacts = {
        "linuxx86-64static": ":libglassnt_static_zip-opt-linux-x86-64",
        "linuxx86-64staticdebug": ":libglassnt_static_zip-dbg-linux-x86-64",
    },
    maven_coordinates = "{}:{}:$(WPILIB_VERSION)".format("edu.wpi.first.glass", "libglassnt"),
    osx_artifacts = {
        "osxuniversalstatic": ":libglassnt_static_zip-opt-osxuniversal",
        "osxuniversalstaticdebug": ":libglassnt_static_zip-dbg-osxuniversal",
    },
    visibility = ["//visibility:public"],
    windows_artifacts = {
        "windowsarm64static": ":libglassnt_static_zip-opt-windows-arm64",
        "windowsarm64staticdebug": ":libglassnt_static_zip-dbg-windows-arm64",
        "windowsx86-64static": ":libglassnt_static_zip-opt-windows-x86-64",
        "windowsx86-64staticdebug": ":libglassnt_static_zip-dbg-windows-x86-64",
    },
)
