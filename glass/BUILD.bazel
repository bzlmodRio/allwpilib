load("@rules_pkg//:mappings.bzl", "pkg_files")
load("//shared/bazel/rules:cc_flags.bzl", "get_wpigui_linker_flags")
load("//shared/bazel/rules:cc_rules.bzl", "wpilib_cc_binary", "wpilib_cc_library")
load("//shared/bazel/rules:publishing.bzl", "assemble_cpp_library", "bundle_artifacts")
load("//shared/bazel/rules/gen:gen-resources.bzl", "generate_resources")
load("//shared/bazel/rules/gen:gen-version-file.bzl", "generate_version_file")

wpilib_cc_library(
    name = "libglass",
    srcs = glob(["src/lib/native/cpp/**/*.cpp"]),
    hdrs = glob(["src/lib/native/include/**"]),
    strip_include_prefix = "src/lib/native/include",
    tags = [
        "no-roborio",
        "wpi-cpp-gui",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//fieldImages:fieldImages.static",
        "//wpigui",
        "//wpimath:wpimath.shared",
        "//wpiutil:wpiutil.shared",
    ],
)

wpilib_cc_library(
    name = "libglassnt",
    srcs = glob(["src/libnt/native/cpp/*.cpp"]),
    hdrs = glob(["src/libnt/native/include/**/*.h"]),
    strip_include_prefix = "src/libnt/native/include",
    tags = [
        "no-roborio",
        "wpi-cpp-gui",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":libglass",
        "//ntcore:ntcore.shared",
    ],
)

generate_version_file(
    name = "generate-version",
    output_file = "WPILibVersion.cpp",
    template = "src/app/generate/WPILibVersion.cpp.in",
)

generate_resources(
    name = "generate-resources",
    namespace = "glass",
    prefix = "GLASS",
    resource_files = glob(["src/app/native/resources/*"]),
)

wpilib_cc_binary(
    name = "glassApp",
    srcs = [
        ":generate-resources",
        ":generate-version",
    ] + glob(["src/app/native/cpp/**"]),
    linkopts = get_wpigui_linker_flags(console = False),
    tags = [
        "no-roborio",
        "wpi-cpp-gui",
    ],
    deps = [
        ":libglassnt",
    ],
)

pkg_files(
    name = "libglass.static_pkg_files",
    srcs = ["libglass"],
    excludes = ["**/*.so"],
    prefix = "linux/x86-64/static",
)

pkg_files(
    name = "libglassnt.static_pkg_files",
    srcs = ["libglassnt"],
    excludes = ["**/*.so"],
    prefix = "linux/x86-64/static",
)

assemble_cpp_library(
    base_name = "libglass",
    hdr_directories = ["src/lib/native/include"],
    shared_library_pkg_files = None,
    src_directories = ["src/lib/native/cpp"],
    static_library_pkg_files = "libglass.static_pkg_files",
    include_license_files_in_srcs = True,
)

assemble_cpp_library(
    base_name = "libglassnt",
    hdr_directories = ["src/libnt/native/include"],
    shared_library_pkg_files = None,
    src_directories = ["src/libnt/native/cpp"],
    static_library_pkg_files = "libglassnt.static_pkg_files",
    include_license_files_in_srcs = True,
)

bundle_artifacts(
    name = "glass-publishing",
    artifacts = [
        ("edu.wpi.first.glass:libglass:-headers", "libglass.hdrs_pkg"),
        ("edu.wpi.first.glass:libglass:-sources", "libglass.srcs_pkg"),
        ("edu.wpi.first.glass:libglass:-{platform}static", "libglass.static_pkg"),
        ("edu.wpi.first.glass:libglassnt:-headers", "libglassnt.hdrs_pkg"),
        ("edu.wpi.first.glass:libglassnt:-sources", "libglassnt.srcs_pkg"),
        ("edu.wpi.first.glass:libglassnt:-{platform}static", "libglassnt.static_pkg"),
    ],
)
