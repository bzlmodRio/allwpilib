load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")
load("//shared/bazel/rules:cc_rules.bzl", "third_party_cc_lib_helper", "wpilib_cc_library")
load("//shared/bazel/rules/gen:gen-version-file.bzl", "generate_version_file")
load("//shared/bazel/rules/publishing:publishing.bzl", "bundle_library_artifacts")

generate_version_file(
    name = "generate-version",
    output_file = "WPILibVersion.cpp",
    template = "src/generate/WPILibVersion.cpp.in",
    visibility = ["//wpilibc:__subpackages__"],
)

third_party_cc_lib_helper(
    name = "generated_cc",
    include_root = "src/generated/main/native/include",
    src_root = "src/generated/main/native/cpp",
    visibility = ["//wpilibNewCommands:__subpackages__"],
)

wpilib_cc_library(
    name = "wpilibc.static",
    srcs = [
        ":generate-version",
    ] + glob([
        "src/main/native/cppcs/**",
        "src/main/native/cpp/**",
    ]),
    hdrs = glob(["src/main/native/include/**"]),
    include_license_files = True,
    strip_include_prefix = "src/main/native/include",
    third_party_libraries = [
        ":generated_cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//cameraserver:cameraserver.static",
        "//cscore:cscore.static",
        "//datalog:datalog.static",
        "//hal:wpiHal.static",
        "//ntcore:ntcore.static",
        "//wpimath:wpimath.static",
        "//wpinet:wpinet.static",
        "//wpiutil:wpiutil.static",
    ],
)

cc_library(
    name = "test-headers",
    testonly = True,
    hdrs = glob(["src/test/native/include/**"]),
    includes = ["src/test/native/include"],
)

cc_test(
    name = "wpilibc-test",
    size = "small",
    srcs = glob(["src/test/native/cpp/**"]),
    tags = [
        "no-asan",
        "no-tsan",
        "no-ubsan",
    ],
    deps = [
        ":test-headers",
        ":wpilibc.static",
        "//thirdparty/googletest:googletest.static",
    ],
)

cc_binary(
    name = "DevMain-Cpp",
    srcs = ["src/dev/native/cpp/main.cpp"],
    deps = [
        ":wpilibc.static",
    ],
)

bundle_library_artifacts(
    name = "publishing_bundle",
    cc_hdr_pkg = ":wpilibc.static-hdrs-zip",
    cc_src_pkg = ":wpilibc.static-srcs-zip",
    cc_static_library_pkg = ":wpilibc.static-zip",
    library_base_name = "wpilibc",
    maven_base = "edu.wpi.first.wpilibc",
)
