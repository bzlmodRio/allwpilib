load("@allwpilib_pip_deps//:requirements.bzl", "requirement")
load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@rules_python//python:defs.bzl", "py_binary")
load("//shared/bazel/rules:cc_rules.bzl", "wpilib_cc_binary", "wpilib_cc_library", "wpilib_cc_static_and_shared_library", "wpilib_cc_test")
load("//shared/bazel/rules:publishing.bzl", "assemble_cpp_library", "bundle_artifacts")
load("//shared/bazel/rules/gen:gen-version-file.bzl", "generate_version_file")
load("//wpilibc:generate.bzl", "generate_wpilibc")

py_binary(
    name = "generate_hids",
    srcs = ["generate_hids.py"],
    tags = ["manual"],
    visibility = ["//visibility:public"],
    deps = [requirement("jinja2")],
)

py_binary(
    name = "generate_pwm_motor_controllers",
    srcs = ["generate_pwm_motor_controllers.py"],
    tags = ["manual"],
    visibility = ["//visibility:public"],
    deps = [requirement("jinja2")],
)

py_binary(
    name = "generate_wpilibc_py",
    srcs = ["generate_wpilibc.py"],
    main = "generate_wpilibc.py",
    tags = ["manual"],
    visibility = ["//visibility:public"],
    deps = [
        ":generate_hids",
        ":generate_pwm_motor_controllers",
    ],
)

filegroup(
    name = "templates",
    srcs = glob(["src/generate/main/native/**"]) + [
        "//wpilibj:hid_schema",
        "//wpilibj:pwm_schema",
    ],
    visibility = ["//wpilibc:__subpackages__"],
)

generate_wpilibc(
    name = "generate_wpilibc",
)

generate_version_file(
    name = "generate-version",
    output_file = "WPILibVersion.cpp",
    template = "src/generate/WPILibVersion.cpp.in",
    visibility = ["//wpilibc:__subpackages__"],
)

write_source_files(
    name = "write_wpilibc",
    files = {
        "src/generated": ":generate_wpilibc",
    },
    suggested_update_target = "//:write_all",
    visibility = ["//visibility:public"],
)

wpilib_cc_library(
    name = "generated_cc_headers",
    hdrs = glob(["src/generated/main/native/include/**"]),
    includes = ["src/generated/main/native/include"],
    strip_include_prefix = "src/generated/main/native/include",
    visibility = ["//wpilibc:__subpackages__"],
)

filegroup(
    name = "generated_cc_source",
    srcs = glob(
        ["src/generated/main/native/cpp/**"],
        exclude = ["src/generated/main/native/cpp/jni/**"],
    ),
    visibility = ["//wpilibc:__subpackages__"],
)

wpilib_cc_static_and_shared_library(
    name = "wpilibc",
    srcs = [
        ":generate-version",
    ] + glob([
        "src/main/native/cppcs/**",
        "src/main/native/cpp/**",
    ]) + [":generated_cc_source"],
    hdrs = glob(["src/main/native/include/**"]),
    standard_deps = [
        ":generated_cc_headers",
    ],
    strip_include_prefix = "src/main/native/include",
    visibility = ["//visibility:public"],
    wpi_maybe_shared_deps = [
        "//wpimath:wpimath",
        "//hal:wpiHal",
        "//wpinet:wpinet",
        "//wpiutil:wpiutil",
        "//cscore:cscore",
        "//ntcore:ntcore",
        "//cameraserver:cameraserver",
    ],
)

wpilib_cc_library(
    name = "test-headers",
    testonly = True,
    hdrs = glob(["src/test/native/include/**"]),
    includes = ["src/test/native/include"],
)

wpilib_cc_test(
    name = "wpilibc-test",
    size = "small",
    srcs = glob(["src/test/native/cpp/**"]),
    tags = [
        "no-asan",
        "no-tsan",
        "no-ubsan",
    ],
    deps = [
        ":test-headers",
        ":wpilibc.static",
        "//thirdparty/googletest:googletest.static",
    ],
)

wpilib_cc_binary(
    name = "wpilibc-c-test",
    srcs = glob([
        "src/test/native/c/**",
        "src/test/native/cpp/main.cpp",
    ]),
    tags = [
        "no-ubsan",
    ],
    deps = [
        ":wpilibc.static",
        "//thirdparty/googletest:googletest.static",
    ],
)

wpilib_cc_binary(
    name = "DevMain-Cpp",
    srcs = ["src/dev/native/cpp/main.cpp"],
    deps = [
        ":wpilibc.shared",
    ],
)

assemble_cpp_library(
    base_name = "wpilibc",
    hdr_directories = [
        "src/main/native/include",
        "src/generated/main/native/include",
    ],
    shared_library_pkg_files = "wpilibc.shared_pkg_files",
    src_directories = ["src/main/native/cpp"],
    static_library_pkg_files = "wpilibc.static_pkg_files",
    include_license_files_in_srcs = True,
)

bundle_artifacts(
    name = "wpilibc-publishing",
    artifacts = [
        ("edu.wpi.first.wpilibc:wpilibc-cpp:-headers", "wpilibc.hdrs_pkg"),
        ("edu.wpi.first.wpilibc:wpilibc-cpp:-sources", "wpilibc.srcs_pkg"),
        ("edu.wpi.first.wpilibc:wpilibc-cpp:-{platform}", "wpilibc.shared_pkg"),
        ("edu.wpi.first.wpilibc:wpilibc-cpp:-{platform}static", "wpilibc.static_pkg"),
    ],
)
