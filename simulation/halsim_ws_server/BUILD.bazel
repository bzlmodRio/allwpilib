load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")
load("//shared/bazel/rules:halsim_library.bzl", "wpilib_halsim_extension")
load("//shared/bazel/rules/publishing:publishing.bzl", "bundle_library_artifacts")

cc_library(
    name = "headers",
    hdrs = glob(["src/main/native/include/**"]),
    includes = ["src/main/native/include"],
)

wpilib_halsim_extension(
    name = "halsim_ws_server",
    srcs = glob(["src/main/native/cpp/**"]),
    auto_export_windows_symbols = False,
    dynamic_deps = [
        "//hal:shared/wpiHal",
        "//wpinet:shared/wpinet",
        "//wpiutil:shared/wpiutil",
    ],
    init_extension_name = "HALSIM_InitExtension_WS_SERVER",
    static_deps = [
        "//hal:static/wpiHal",
        "//wpinet:static/wpinet",
        "//wpiutil:static/wpiutil",
        "//simulation/halsim_ws_core:static/halsim_ws_core",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":headers",
        "//simulation/halsim_ws_core",
    ],
)

cc_library(
    name = "test_headers",
    srcs = glob(["src/test/native/include/*.h"]),
    includes = ["src/test/native/include"],
    strip_include_prefix = "src/test/native/include",
)

cc_test(
    name = "halsim_ws_server-test",
    size = "small",
    srcs = glob(["src/test/native/**/*.cpp"]),
    tags = [
        "no-asan",
    ],
    deps = [
        ":halsim_ws_server",
        ":test_headers",
        "//thirdparty/googletest",
    ],
)

cc_binary(
    name = "DevMain-Cpp",
    srcs = ["src/dev/native/cpp/main.cpp"],
    deps = [
        ":halsim_ws_server",
    ],
)

bundle_library_artifacts(
    name = "publishing_bundle",
    add_cc_suffix = False,
    cc_hdr_pkg = ":halsim_ws_server-hdrs-zip",
    cc_shared_library_pkg = ":shared/halsim_ws_server-shared-zip",
    cc_src_pkg = ":halsim_ws_server-srcs-zip",
    cc_static_library_pkg = ":static/halsim_ws_server-static-zip",
    group_id = "edu.wpi.first.halsim",
    library_base_name = "halsim_ws_server",
)
