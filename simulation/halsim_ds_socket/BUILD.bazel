load("//shared/bazel/rules:cc_rules.bzl", "wpilib_cc_binary", "wpilib_cc_library", "wpilib_cc_static_and_shared_library", "wpilib_cc_test")
load("//shared/bazel/rules:publishing.bzl", "assemble_cpp_library", "bundle_artifacts")

wpilib_cc_library(
    name = "headers",
    hdrs = glob(["src/main/native/include/**"]),
    includes = ["src/main/native/include"],
)

wpilib_cc_static_and_shared_library(
    name = "halsim_ds_socket",
    srcs = glob(["src/main/native/cpp/**"]),
    features = ["windows_export_all_symbols"],
    standard_deps = [
        ":headers",
    ],
    # tags = [
    #     "no-roborio",
    # ],
    visibility = ["//visibility:public"],
    wpi_maybe_shared_deps = [
        "//hal:wpiHal",
        "//wpinet:wpinet",
    ],
)

wpilib_cc_test(
    name = "halsim_ds_socket-test",
    size = "small",
    srcs = glob([
        "src/test/native/**/*.cpp",
        "src/test/native/**/*.h",
    ]),
    tags = ["no-roborio"],
    deps = [
        "//simulation/halsim_ds_socket:halsim_ds_socket.shared",
        "//thirdparty/googletest:googletest.static",
    ],
)

wpilib_cc_binary(
    name = "DevMain-Cpp",
    srcs = ["src/dev/native/cpp/main.cpp"],
    tags = [
        "no-roborio",
    ],
    deps = [
        ":halsim_ds_socket.shared",
    ],
)

assemble_cpp_library(
    base_name = "halsim_ds_socket",
    hdr_directories = ["src/main/native/include"],
    shared_library_pkg_files = "halsim_ds_socket.shared_pkg_files",
    src_directories = ["src/main/native/cpp"],
    static_library_pkg_files = "halsim_ds_socket.static_pkg_files",
    include_license_files_in_srcs = True,
)

bundle_artifacts(
    name = "halsim_ds_socket-publishing",
    artifacts = [
        ("edu.wpi.first.halsim:halsim_ds_socket:-headers", "halsim_ds_socket.hdrs_pkg"),
        ("edu.wpi.first.halsim:halsim_ds_socket:-sources", "halsim_ds_socket.srcs_pkg"),
        ("edu.wpi.first.halsim:halsim_ds_socket:-{platform}", "halsim_ds_socket.shared_pkg"),
        ("edu.wpi.first.halsim:halsim_ds_socket:-{platform}static", "halsim_ds_socket.static_pkg"),
    ],
)
