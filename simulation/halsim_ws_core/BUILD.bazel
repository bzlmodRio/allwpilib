load("//shared/bazel/rules:cc_rules.bzl", "wpilib_shared_and_static_library")
load("//shared/bazel/rules/publishing:publishing.bzl", "bundle_library_artifacts")

wpilib_shared_and_static_library(
    name = "halsim_ws_core",
    srcs = glob(["src/main/native/cpp/*.cpp"]),
    hdrs = glob(["src/main/native/include/*.h"]),
    auto_export_windows_symbols = False,
    dynamic_deps = [
        "//hal:shared/wpiHal",
        "//wpinet:shared/wpinet",
        "//wpiutil:shared/wpiutil",
    ],
    include_third_party_notices = True,
    static_deps = [
        "//hal:static/wpiHal",
        "//wpinet:static/wpinet",
        "//wpiutil:static/wpiutil",
    ],
    strip_include_prefix = "src/main/native/include",
    target_compatible_with = select({
        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": ["@platforms//:incompatible"],
        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
    deps = [
        "//hal:wpiHal",
        "//wpinet",
        "//wpiutil",
    ],
)

bundle_library_artifacts(
    name = "publishing_bundle",
    add_cc_suffix = False,
    cc_hdr_pkg = ":halsim_ws_core-hdrs-zip",
    cc_shared_library_pkg = ":shared/halsim_ws_core-shared-zip",
    cc_src_pkg = ":halsim_ws_core-srcs-zip",
    cc_static_library_pkg = ":static/halsim_ws_core-static-zip",
    group_id = "edu.wpi.first.halsim",
    library_base_name = "halsim_ws_core",
)
