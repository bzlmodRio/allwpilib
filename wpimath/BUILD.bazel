load("@allwpilib_pip_deps//:requirements.bzl", "requirement")
load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")
load("@rules_java//java:defs.bzl", "java_binary")
load("@rules_pkg//:mappings.bzl", "pkg_files")
load("@rules_python//python:defs.bzl", "py_binary")
load("//shared/bazel/rules:cc_rules.bzl", "third_party_cc_lib_helper", "wpilib_shared_and_static_library")
load("//shared/bazel/rules:java_rules.bzl", "wpilib_java_junit5_test")
load("//shared/bazel/rules:jni_rules.bzl", "wpilib_jni_cc_library", "wpilib_jni_java_library")
load("//shared/bazel/rules:packaging.bzl", "zip_java_srcs")
load("//shared/bazel/rules/publishing:publishing.bzl", "bundle_default_jni_library")
load("//shared/bazel/rules/robotpy:build_info_gen.bzl", "generate_robotpy_native_wrapper_build_info", "generate_robotpy_pybind_build_info")
load("//shared/bazel/rules/robotpy:pytest_util.bzl", "robotpy_py_test")
load("//wpimath:generate.bzl", "generate_wpimath")
load("//wpimath:robotpy_native_build_info.bzl", "define_native_wrapper")
load("//wpimath:robotpy_pybind_build_info.bzl", "define_pybind_library", "publish_library_casters", "wpimath_controls_extension", "wpimath_extension", "wpimath_filter_extension", "wpimath_geometry_extension", "wpimath_interpolation_extension", "wpimath_kinematics_extension", "wpimath_spline_extension")
load("//wpimath:robotpy_pybind_test_info.bzl", "wpimath_test_extension", define_test_pybind_library = "define_pybind_library")

filegroup(
    name = "templates",
    srcs = glob(["src/generate/main/java/*.jinja"]),
)

filegroup(
    name = "proto_files",
    srcs = glob(["src/main/proto/**/*.proto"]),
)

py_binary(
    name = "generate_nanopb",
    srcs = ["generate_nanopb.py"],
    target_compatible_with = select({
        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": ["@platforms//:incompatible"],
        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)

py_binary(
    name = "generate_numbers",
    srcs = ["generate_numbers.py"],
    data = [":templates"],
    target_compatible_with = select({
        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": ["@platforms//:incompatible"],
        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [requirement("jinja2")],
)

py_binary(
    name = "generate_quickbuf",
    srcs = ["generate_quickbuf.py"],
    target_compatible_with = select({
        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": ["@platforms//:incompatible"],
        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)

py_binary(
    name = "generate_wpimath_py",
    srcs = ["generate_wpimath.py"],
    main = "generate_wpimath.py",
    target_compatible_with = select({
        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": ["@platforms//:incompatible"],
        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        ":generate_nanopb",
        ":generate_numbers",
        ":generate_quickbuf",
    ],
)

generate_wpimath(
    name = "generate_wpimath",
    tags = ["pregeneration"],
)

write_source_files(
    name = "write_wpimath",
    files = {
        "src/generated": ":generate_wpimath",
    },
    suggested_update_target = "//:write_all",
    tags = ["pregeneration"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "generated_java",
    srcs = glob(["src/generated/main/java/**/*.java"]),
)

third_party_cc_lib_helper(
    name = "eigen",
    include_root = "src/main/native/thirdparty/eigen/include",
)

third_party_cc_lib_helper(
    name = "gcem",
    include_root = "src/main/native/thirdparty/gcem/include",
)

third_party_cc_lib_helper(
    name = "sleipnir",
    include_root = "src/main/native/thirdparty/sleipnir/include",
    src_root = "src/main/native/thirdparty/sleipnir/src",
)

cc_library(
    name = "nanopb-generated-headers",
    hdrs = glob(["src/generated/main/native/cpp/**/*.h"]),
    includes = ["src/generated/main/native/cpp"],
    strip_include_prefix = "src/generated/main/native/cpp",
)

pkg_files(
    name = "protobuf_hdr_pkg",
    srcs = glob(["src/generated/main/native/cpp/wpimath/protobuf/*.npb.h"]),
    strip_prefix = "src/generated/main/native/cpp/",
)

wpilib_shared_and_static_library(
    name = "wpimath",
    srcs = glob(
        [
            "src/main/native/cpp/**",
            "src/generated/main/native/cpp/**/*.cpp",
        ],
        exclude = ["src/main/native/cpp/jni/**"],
    ),
    hdrs = glob(["src/main/native/include/**"]),
    auto_export_windows_symbols = False,
    dynamic_deps = [
        "//wpiutil:shared/wpiutil",
    ],
    extra_hdr_pkg_files = [":protobuf_hdr_pkg"],
    extra_src_pkg_files = [
        ":wpimath-java-jni-hdrs-pkg",
    ],
    includes = [
        "src/main/native/include",
        "src/main/native/thirdparty/sleipnir/src",
    ],
    local_defines = [
        "WPILIB_EXPORTS",
        "SLEIPNIR_EXPORTS",
    ],
    static_deps = [
        "//wpiutil:static/wpiutil",
    ],
    strip_include_prefix = "src/main/native/include",
    third_party_header_only_libraries = [
        ":eigen",
        ":gcem",
    ],
    third_party_libraries = [
        ":sleipnir",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":nanopb-generated-headers",
        "//wpiutil",
    ],
)

wpilib_jni_cc_library(
    name = "wpimathjni",
    srcs = glob(["src/main/native/cpp/jni/**"]),
    dynamic_deps = [
        ":shared/wpimath",
        "//wpiutil:shared/wpiutil",
    ],
    java_dep = ":wpimath-java",
    visibility = ["//visibility:public"],
    deps = [
        ":wpimath",
    ],
)

wpilib_jni_java_library(
    name = "wpimath-java",
    srcs = [":generated_java"] + glob(["src/main/java/**/*.java"]),
    native_libs = [":wpimathjni"],
    resource_strip_prefix = "wpimath/src/main/proto",
    resources = glob(["src/main/proto/**"]),
    visibility = ["//visibility:public"],
    deps = [
        "//wpiunits:wpiunits-java",
        "//wpiutil:wpiutil-java",
        "@maven//:com_fasterxml_jackson_core_jackson_annotations",
        "@maven//:com_fasterxml_jackson_core_jackson_core",
        "@maven//:com_fasterxml_jackson_core_jackson_databind",
        "@maven//:org_ejml_ejml_core",
        "@maven//:org_ejml_ejml_ddense",
        "@maven//:org_ejml_ejml_simple",
        "@maven//:us_hebi_quickbuf_quickbuf_runtime",
    ],
)

zip_java_srcs(name = "wpimath")

cc_library(
    name = "test_headers",
    hdrs = glob([
        "src/test/native/include/**",
    ]),
    strip_include_prefix = "src/test/native/include",
)

cc_test(
    name = "wpimath-cpp-test",
    size = "small",
    srcs = glob([
        "src/test/native/cpp/**/*.cpp",
        "src/test/native/cpp/**/*.h",
    ]),
    tags = [
        "no-bullseye",
        "no-raspi",
    ],
    deps = [
        ":test_headers",
        ":wpimath",
        "//thirdparty/googletest",
    ],
)

wpilib_java_junit5_test(
    name = "wpimath-java-test",
    srcs = glob(["src/test/java/**/*.java"]),
    deps = [
        ":wpimath-java",
        "//wpiunits:wpiunits-java",
        "//wpiutil:wpiutil-java",
        "@maven//:org_ejml_ejml_core",
        "@maven//:org_ejml_ejml_simple",
        "@maven//:us_hebi_quickbuf_quickbuf_runtime",
    ],
)

cc_binary(
    name = "DevMain-Cpp",
    srcs = ["src/dev/native/cpp/main.cpp"],
    deps = [
        ":wpimath",
    ],
)

java_binary(
    name = "DevMain-Java",
    srcs = ["src/dev/java/edu/wpi/first/math/DevMain.java"],
    main_class = "edu.wpi.first.math.DevMain",
    deps = [
        ":wpimath-java",
    ],
)

py_binary(
    name = "ExponentialProfileModel",
    srcs = ["algorithms/ExponentialProfileModel.py"],
    target_compatible_with = select({
        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)

bundle_default_jni_library(
    name = "publishing_bundle",
    group_id = "edu.wpi.first.wpimath",
    library_base_name = "wpimath",
)

generate_robotpy_native_wrapper_build_info(
    name = "robotpy-native-wpimath-generator",
    pyproject_toml = "src/main/python/native-pyproject.toml",
    third_party_dirs = [
        "eigen",
        "gcem",
        "sleipnir",
    ],
)

define_native_wrapper(
    name = "robotpy-native-wpimath",
    pyproject_toml = "src/main/python/native-pyproject.toml",
)

generate_robotpy_pybind_build_info(
    name = "robotpy-wpimath-generator",
    additional_srcs = [":robotpy-native-wpimath.copy_headers"],
    package_root_file = "src/main/python/wpimath/__init__.py",
    pkgcfgs = [
        "//wpimath:native/wpimath/robotpy-native-wpimath.pc",
        "//wpiutil:native/wpiutil/robotpy-native-wpiutil.pc",
        "//wpiutil:src/main/python/wpiutil/wpiutil.pc",
        "//wpiutil:src/main/python/wpiutil/wpiutil-casters.pc",
        "//wpiutil:src/main/python/wpiutil/wpiutil-casters.pybind11.json",
    ],
    yaml_files = glob(["src/main/python/semiwrap/**/*.yml"]),
)

publish_library_casters()

wpimath_extension(
    srcs = ["src/main/python/wpimath/src/wpimath.cpp"],
    extra_hdrs = glob(["src/main/python/wpimath/_impl/src/**/*.h"]),
    includes = [
        # "src/main/python/wpi/",
    ],
)

wpimath_filter_extension(
    srcs = ["src/main/python/wpimath/filter/filter.cpp"],
    extra_hdrs = glob(["src/main/python/wpimath/_impl/src/**/*.h"]),
    includes = [
        # "src/main/python/wpi/",
    ],
)

wpimath_geometry_extension(
    srcs = ["src/main/python/wpimath/geometry/geometry.cpp"],
    # extension_name = "_geometry",
    extra_hdrs = glob(["src/main/python/wpimath/geometry/include/rpy/*"]),
    header_to_dat_deps = glob(["src/main/native/include/**/*"]) + glob([
        "src/main/python/wpimath/geometry/include/**/*.h",
        "src/main/python/wpimath/_impl/src/**/*.h",
    ]),
    includes = ["src/main/python/wpimath/geometry/include"],
)

wpimath_interpolation_extension(
    srcs = ["src/main/python/wpimath/interpolation/interpolation.cpp"],
    header_to_dat_deps = glob([
        "src/main/python/wpimath/geometry/include/**/*.h",
        "src/main/python/wpimath/_impl/src/**/*.h",
    ]),
)

wpimath_kinematics_extension(
    srcs = ["src/main/python/wpimath/kinematics/kinematics.cpp"],
    header_to_dat_deps = glob([
        "src/main/python/wpimath/geometry/include/**/*.h",
        "src/main/python/wpimath/_impl/src/**/*.h",
    ]),
)

wpimath_spline_extension(
    srcs = ["src/main/python/wpimath/spline/spline.cpp"],
    header_to_dat_deps = glob([
        "src/main/python/wpimath/geometry/include/**/*.h",
        "src/main/python/wpimath/_impl/src/**/*.h",
    ]),
)

wpimath_controls_extension(
    srcs = ["src/main/python/wpimath/_controls/controls.cpp"],
    header_to_dat_deps = glob([
        "src/main/python/wpimath/geometry/include/**/*.h",
        "src/main/python/wpimath/_impl/src/**/*.h",
    ]),
)

define_pybind_library(name = "robotpy-wpimath")

generate_robotpy_pybind_build_info(
    name = "robotpy-wpimath_test-generator",
    additional_srcs = ["src/test/python/cpp/wpimath_test/include/module.h"],
    generated_file_name = "robotpy_pybind_test_info.bzl",
    package_root_file = "src/test/python/cpp/wpimath_test/__init__.py",
    pkgcfgs = [
        "//wpiutil:native/wpiutil/robotpy-native-wpiutil.pc",
        "//wpiutil:src/main/python/wpiutil/wpiutil.pc",
        "//wpiutil:src/main/python/wpiutil/wpiutil-casters.pc",
        "//wpiutil:src/main/python/wpiutil/wpiutil-casters.pybind11.json",
        "//wpimath:native/wpimath/robotpy-native-wpimath.pc",
        "//wpimath:src/main/python/wpimath/wpimath.pc",
        "//wpimath:src/main/python/wpimath/wpimath-casters.pc",
        "//wpimath:src/main/python/wpimath/wpimath-casters.pybind11.json",
    ],
    pyproject_toml = "src/test/python/cpp/pyproject.toml",
    stripped_include_prefix = "src/test/python/cpp",
    yaml_files = glob(["src/test/python/cpp/semiwrap/**/*.yml"]),
    yml_prefix = "src/test/python/cpp/",
)

wpimath_test_extension(
    srcs = glob(["src/test/python/cpp/wpimath_test/src/*.cpp"]),
    extra_hdrs = ["src/test/python/cpp/wpimath_test/include/module.h"],
    header_to_dat_deps = ["src/test/python/cpp/wpimath_test/include/module.h"],
    includes = ["src/test/python/cpp/wpimath_test/include"],
)

define_test_pybind_library(
    name = "robotpy-wpimath-test",
)

robotpy_py_test(
    "python_tests",
    extra_sources = ["src/test/python/conftest.py"],
    tests = glob(
        ["src/test/python/**/*.py"],
        exclude = [
            "src/test/python/conftest.py",
            "src/test/python/run_tests.py",
            "src/test/python/cpp/**",
        ],
    ),
    deps = [
        ":robotpy-wpimath",
        ":robotpy-wpimath-test",
        requirement("pytest"),
    ],
)
