load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@rules_python//python:defs.bzl", "py_binary")
load("//hal:generate.bzl", "generate_hal")
load("//shared/bazel/rules:cc_rules.bzl", "wpilib_cc_library")

filegroup(
    name = "templates",
    srcs = glob(["src/generate/*"]),
)

py_binary(
    name = "generate_usage_reporting",
    srcs = ["generate_usage_reporting.py"],
    data = [":templates"],
    tags = ["manual"],
    visibility = ["//visibility:public"],
)

generate_hal(
    name = "generate_hal",
)

write_source_files(
    name = "write_hal",
    files = {
        "src/generated": ":generate_hal",
    },
    suggested_update_target = "//:write_all",
    visibility = ["//visibility:public"],
)

wpilib_cc_library(
    name = "generated_cc_headers",
    hdrs = glob(["src/generated/main/native/include/**"]),
    includes = ["src/generated/main/native/include"],
    strip_include_prefix = "src/generated/main/native/include",
    visibility = ["//hal:__subpackages__"],
)

filegroup(
    name = "generated_java",
    srcs = glob(["src/generated/main/java/**/*.java"]),
    visibility = ["//hal:__subpackages__"],
)
